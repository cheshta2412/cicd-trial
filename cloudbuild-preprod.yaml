steps:
  # Step 1: Install dependencies
  - name: 'python:3.8-slim'
    entrypoint: 'pip'
    args: ['install', '-r', 'requirements.txt']

  # Step 2: Run tests (if you have any)
  # - name: 'python:3.8-slim'
  #   entrypoint: 'pytest'
  #   args: ['tests/']

  # Step 3: Build Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'us-central1-docker.pkg.dev/my-project-433308/repo-trial/hello-world-app:preprod-latest', '-f', 'preprod/Dockerfile.preprod', '.']

  # Step 4: Push Docker image to Google Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'us-central1-docker.pkg.dev/my-project-433308/repo-trial/hello-world-app:preprod-latest']

  # Step 5: Deploy to GKE
  - name: 'gcr.io/cloud-builders/kubectl'
    args:
      - 'apply'
      - '-f'
      - 'preprod/deployment-preprod.yaml'
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=us-central1'
      - 'CLOUDSDK_CONTAINER_CLUSTER=cluster-preprod'

options:
  logging: CLOUD_LOGGING_ONLY

# steps:
# - name: 'gcr.io/cloud-builders/docker'
#   args: ['build', '-t', 'us-central1-docker.pkg.dev/my-project-433308/repo-trial/hello-world-app:preprod-latest', '-f', 'preprod/Dockerfile.preprod', '.']
# - name: 'gcr.io/cloud-builders/docker'
#   args: ['push', 'us-central1-docker.pkg.dev/my-project-433308/repo-trial/hello-world-app:preprod-latest']
# images:
# - 'us-central1-docker.pkg.dev/my-project-433308/repo-trial/hello-world-app:preprod-latest'

# options:
#   logging: CLOUD_LOGGING_ONLY
