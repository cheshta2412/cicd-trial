steps:
  # Step 1: Build the Docker image with no cache to ensure the latest changes are included
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '--no-cache', '-t', 'us-central1-docker.pkg.dev/apt-cycling-433408-v4/repo-trial/hello-world-app:preprod-latest', 'preprod/']

  # Step 2: Push the Docker image to the Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'us-central1-docker.pkg.dev/apt-cycling-433408-v4/repo-trial/hello-world-app:preprod-latest']

  # Step 3: Get GKE credentials for the preprod cluster
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gcloud container clusters get-credentials cluster-preprod --zone us-central1 --project apt-cycling-433408-v4

  # Step 4: Deploy the updated image to GKE
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'preprod/deployment-preprod.yaml']
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=us-central1'
      - 'CLOUDSDK_CONTAINER_CLUSTER=cluster-preprod'

  # Step 5: Apply the Kubernetes service
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'preprod/service-preprod.yaml']
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=us-central1'
      - 'CLOUDSDK_CONTAINER_CLUSTER=cluster-preprod'

  # Step 6: Ensure that Kubernetes pulls the latest Docker image
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['set', 'image', 'deployment/hello-world-app-preprod', 'hello-world-app-preprod=us-central1-docker.pkg.dev/apt-cycling-433408-v4/repo-trial/hello-world-app:preprod-latest']
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=us-central1'
      - 'CLOUDSDK_CONTAINER_CLUSTER=cluster-preprod'

timeout: '1200s'

options:
  logging: CLOUD_LOGGING_ONLY


# steps:
#   # Step 1: Build the Docker image
#   - name: 'gcr.io/cloud-builders/docker'
#     args: ['build', '-t', 'us-central1-docker.pkg.dev/apt-cycling-433408-v4/repo-trial/hello-world-app:preprod-latest', 'preprod/']  # Ensure correct directory

#   # Step 2: Push the Docker image
#   - name: 'gcr.io/cloud-builders/docker'
#     args: ['push', 'us-central1-docker.pkg.dev/apt-cycling-433408-v4/repo-trial/hello-world-app:preprod-latest']

#   # Step 3: Get GKE credentials
#   - name: 'gcr.io/cloud-builders/gcloud'
#     entrypoint: 'bash'
#     args:
#       - '-c'
#       - |
#         gcloud container clusters get-credentials cluster-preprod --zone us-central1 --project apt-cycling-433408-v4

#   # Step 4: Deploy the updated image to GKE
#   - name: 'gcr.io/cloud-builders/kubectl'
#     args: ['apply', '-f', 'preprod/deployment-preprod.yaml']
#     env:
#       - 'CLOUDSDK_COMPUTE_ZONE=us-central1'
#       - 'CLOUDSDK_CONTAINER_CLUSTER=cluster-preprod'

#   # Step 5: Apply the Kubernetes service
#   - name: 'gcr.io/cloud-builders/kubectl'
#     args: ['apply', '-f', 'preprod/service-preprod.yaml']
#     env:
#       - 'CLOUDSDK_COMPUTE_ZONE=us-central1'
#       - 'CLOUDSDK_CONTAINER_CLUSTER=cluster-preprod'

# timeout: '1200s'

# options:
#   logging: CLOUD_LOGGING_ONLY
  

