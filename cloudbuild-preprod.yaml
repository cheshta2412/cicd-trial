
  
steps:
  # Step 1: Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'us-central1-docker.pkg.dev/my-project-433308/repo-trial/hello-world-app:preprod-latest', '.']
    dir: 'preprod'  # Ensure the working directory is set to your 'preprod' folder

  # Step 2: Push the Docker image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'us-central1-docker.pkg.dev/my-project-433308/repo-trial/hello-world-app:preprod-latest']

  # Step 3: Deploy the updated image to GKE
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['set', 'image', 'deployment/hello-world-app-preprod', 'hello-world-app-preprod=us-central1-docker.pkg.dev/my-project-433308/repo-trial/hello-world-app:preprod-latest']
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=us-central1-c'
      - 'CLOUDSDK_CONTAINER_CLUSTER=cluster-preprod'
  
  # Step 4: Apply the Kubernetes deployment
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'preprod/deployment-preprod.yaml']

  # Step 5: Apply the Kubernetes service
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'preprod/service-preprod.yaml']

timeout: '1200s'  # Adjust the timeout if needed
options:
  logging: CLOUD_LOGGING_ONLY
